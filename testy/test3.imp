# General Prime field calculator
# Supported operations: (U - unary B - binary)
#  0 - reduce (U)
#  1 - negate (U)
#  2 - invert (U)
#  3 - add (B)
#  4 - subtract (B)
#  5 - multiply (B)
#  6 - divide (B)
#  7 - power (B)
#
#  999 - exit
#
# Usage:
# ? [enter prime]
# repeat
# ? [operation]
# if operation is unary:
# ? [operand]
# > [operation]([operand])
# elif operation is binary:
# ? [operand-a]
# ? [operand-b]
# > [operation]([operand-a], [operand-b])
# endif
# until operation == exit

PROCEDURE de(m,n,x,y,z) IS
  a,b,r,s,reszta,iloraz,rr,ss,tmp
IN
  a:=m;
  b:=n;
  x:=1;
  y:=0;
  r:=n;
  s:=m-1;
  WHILE b>0 DO
    # niezmiennik: NWD(m,n)=NWD(a,b) i a=mx-ny i b=mr-ns
    reszta:=a%b;
    iloraz:=a/b;
    a:=b;
    b:=reszta;
    rr:=r;
    tmp:=iloraz*r;
    IF x<tmp THEN
      r:=n*iloraz;
    ELSE
      r:=0;
    ENDIF
    r:=r+x;
    r:=r-tmp;
    ss:=s;
    tmp:=iloraz*s;
    IF y<tmp THEN
      s:=m*iloraz;
    ELSE
      s:=0;
    ENDIF
    s:=s+y;
    s:=s-tmp;
    x:=rr;
    y:=ss;
  ENDWHILE
  z:=a;
END

# r = 1/x mod p
PROCEDURE inverse(r, x, p) IS
  ta, tb
IN
  de(x, p, r, ta, tb);
END

# r = x^y mod p
PROCEDURE power(r, x, y, p) IS
  pot,wyk,o
IN
  r:=1;
  wyk:=y;
  pot:=x%p;
  WHILE wyk>0 DO
	  o:=wyk%2;
	  IF o=1 THEN
	    r:=r*pot;
	    r:=r%p;
	  ENDIF
	  wyk:=wyk/2;
	  pot:=pot*pot;
	  pot:=pot%p;
  ENDWHILE
END

PROGRAM IS
  p, op, x, y, r
IN
  READ p;
  REPEAT
    # WRITE 999999999;
    READ op;
    IF op <= 7 THEN
      IF op <= 2 THEN
        # WRITE 111111111;
        READ x;
        IF op <= 1 THEN
          IF op = 0 THEN
            r := x % p;
          ELSE # op = 1
            x := x % p;
            r := p - x;
            r := r % p;
          ENDIF
        ELSE # op = 2
          inverse(r, x, p);
        ENDIF
      ELSE # op > 2
        # WRITE 222222222;
        READ x;
        READ y;
        IF op <= 6 THEN
          IF op <= 4 THEN
            IF op = 3 THEN
              r := x + y;
              r := r % p;
            ELSE  # op = 4
              y := y % p;
              x := p + x;
              r := x - y;
              r := r % p;
            ENDIF
          ELSE # 5 <= op <= 6
            IF op = 5 THEN
              r := x * y;
              r := r % p;
            ELSE  # op = 6
              inverse(r, y, p);
              r := r * x;
              r := r % p;
            ENDIF
          ENDIF
        ELSE # op = 7
          power(r, x, y, p);
        ENDIF
      ENDIF
      WRITE r;
    ENDIF
  UNTIL op = 999;
END
      